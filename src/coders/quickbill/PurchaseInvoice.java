/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package coders.quickbill;

import java.awt.Color;
import java.awt.event.KeyEvent;
import static java.lang.Thread.sleep;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
import org.apache.poi.hssf.record.formula.TblPtg;

/**
 *
 * @author sunny
 */
public class PurchaseInvoice extends javax.swing.JFrame {

    Connection conn=null;
    PreparedStatement pst=null;
    ResultSet rs=null,rs2=null;
    /**
     * Creates new form ManageProducts
     */
    public PurchaseInvoice() {
        initComponents();
        conn=javaconnect.ConnectDB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pnlPurchaseDetails = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtProductID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtBarcode = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtProductDescription = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtQty = new javax.swing.JTextField();
        btnAddProduct = new javax.swing.JButton();
        btnDeleteProduct = new javax.swing.JButton();
        btnPrint = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtPurchaseRate = new javax.swing.JTextField();
        btnNewProduct = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtPurCGSTAmt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtPurSGSTAmt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtPurIGSTAmt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        cmbUnit = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        txtHSNCODE = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtSalesRate = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtSalesCGSTAmt = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtSalesSGSTAmt = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtSalesIGSTAmt = new javax.swing.JTextField();
        lblCurrentDate = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        cmbPurCGSTRate = new javax.swing.JComboBox<>();
        cmbSalesCGSTRate = new javax.swing.JComboBox<>();
        cmbPurIGSTRate = new javax.swing.JComboBox<>();
        cmbSalesIGSTRate = new javax.swing.JComboBox<>();
        cmbPurSGSTRate = new javax.swing.JComboBox<>();
        cmbSalesSGSTRate = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        txtPurTotAmt = new javax.swing.JTextField();
        txtSalesTotAmt = new javax.swing.JTextField();
        cmbItemName = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblPurInvoice = new javax.swing.JTable();
        btnGenerateInvoice = new javax.swing.JButton();
        txtTotalInvoice = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtInvoiceNo = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        cmbDealer = new javax.swing.JComboBox<>();
        btnSaveTrans = new javax.swing.JButton();
        btnUpdtTrans = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Purchase Invoice - Coders Quickbill 2017");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(40, 40, 40));

        pnlPurchaseDetails.setBackground(new java.awt.Color(0, 51, 51));
        pnlPurchaseDetails.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Purchase Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12), new java.awt.Color(255, 204, 0))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel1.setForeground(java.awt.Color.white);
        jLabel1.setText("Product ID");

        txtProductID.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        txtProductID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtProductIDFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtProductIDFocusLost(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel2.setForeground(java.awt.Color.white);
        jLabel2.setText("Barcode");

        txtBarcode.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        txtBarcode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBarcodeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBarcodeFocusLost(evt);
            }
        });
        txtBarcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBarcodeActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel3.setForeground(java.awt.Color.white);
        jLabel3.setText("Item Name");

        jLabel4.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel4.setForeground(java.awt.Color.white);
        jLabel4.setText("Description");

        txtProductDescription.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        txtProductDescription.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtProductDescriptionFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtProductDescriptionFocusLost(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel5.setForeground(java.awt.Color.white);
        jLabel5.setText("Quantity");

        txtQty.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        txtQty.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtQtyFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtQtyFocusLost(evt);
            }
        });
        txtQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtQtyKeyReleased(evt);
            }
        });

        btnAddProduct.setBackground(java.awt.Color.green);
        btnAddProduct.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        btnAddProduct.setText("ADD");
        btnAddProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProductActionPerformed(evt);
            }
        });

        btnDeleteProduct.setBackground(java.awt.Color.red);
        btnDeleteProduct.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        btnDeleteProduct.setText("DELETE");
        btnDeleteProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteProductActionPerformed(evt);
            }
        });

        btnPrint.setBackground(java.awt.Color.white);
        btnPrint.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/coders/images/printer.png"))); // NOI18N
        btnPrint.setText("PRINT");
        btnPrint.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel6.setForeground(java.awt.Color.white);
        jLabel6.setText("Purchase Rate");

        txtPurchaseRate.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        txtPurchaseRate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPurchaseRateFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPurchaseRateFocusLost(evt);
            }
        });
        txtPurchaseRate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPurchaseRateKeyReleased(evt);
            }
        });

        btnNewProduct.setBackground(java.awt.Color.cyan);
        btnNewProduct.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        btnNewProduct.setText("NEW");
        btnNewProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewProductActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel7.setForeground(java.awt.Color.white);
        jLabel7.setText("CGST%");

        txtPurCGSTAmt.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        txtPurCGSTAmt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPurCGSTAmtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPurCGSTAmtFocusLost(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel8.setForeground(java.awt.Color.white);
        jLabel8.setText("SGST%");

        txtPurSGSTAmt.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        txtPurSGSTAmt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPurSGSTAmtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPurSGSTAmtFocusLost(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel9.setForeground(java.awt.Color.white);
        jLabel9.setText("IGST%");

        txtPurIGSTAmt.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        txtPurIGSTAmt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPurIGSTAmtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPurIGSTAmtFocusLost(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel10.setForeground(java.awt.Color.white);
        jLabel10.setText("Unit");

        cmbUnit.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        cmbUnit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---Select---", "brl - Barrel", "box - Box", "btl - Bottle", "can - Can", "cas - Case", "cg - Centigrams", "cl - Centilitres", "cm - Centimeters", "chn - Chain", "crt - Crate", "ccm - Cubic Centimeters", "cdm - Cubic Decimeters", "cuf - Cubic Feets", "cui - Cubic Inches", "cum - Cubic Meters", "cmm - Cubic Milimeters", "cuy - Cubic Yards", "dg - Decigrams", "dl - Deciliters", "dm - Decimeters", "doz - Dozen", "ea - Each", "ft - Feet", "fl - Flask", "gal - Galon", "gr - Grams", "grs - Gross", "hun - Hundreds", "in - Inches", "kg - Kilograms", "kl - Kiloliters", "kt - Kiloton", "knt - Knots", "l - Litres", "m - Meters", "mt - Metric Tons", "mg - Miligram", "oz - Ounce", "pc - Piece", "ton - Tons" }));
        cmbUnit.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbUnitFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cmbUnitFocusLost(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel11.setForeground(java.awt.Color.white);
        jLabel11.setText("HSN-CODE");

        txtHSNCODE.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        txtHSNCODE.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtHSNCODEFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtHSNCODEFocusLost(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel16.setForeground(java.awt.Color.white);
        jLabel16.setText("Sales Rate");

        txtSalesRate.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        txtSalesRate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSalesRateFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSalesRateFocusLost(evt);
            }
        });
        txtSalesRate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSalesRateKeyReleased(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel17.setForeground(java.awt.Color.white);
        jLabel17.setText("CGST%");

        txtSalesCGSTAmt.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        txtSalesCGSTAmt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSalesCGSTAmtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSalesCGSTAmtFocusLost(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel18.setForeground(java.awt.Color.white);
        jLabel18.setText("SGST%");

        txtSalesSGSTAmt.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        txtSalesSGSTAmt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSalesSGSTAmtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSalesSGSTAmtFocusLost(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel19.setForeground(java.awt.Color.white);
        jLabel19.setText("IGST%");

        txtSalesIGSTAmt.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        txtSalesIGSTAmt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSalesIGSTAmtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSalesIGSTAmtFocusLost(evt);
            }
        });

        lblCurrentDate.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        lblCurrentDate.setForeground(java.awt.Color.white);
        lblCurrentDate.setText("Date");

        lblTime.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        lblTime.setForeground(java.awt.Color.white);
        lblTime.setText("Time");

        cmbPurCGSTRate.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        cmbPurCGSTRate.setToolTipText("Select GST percent");
        cmbPurCGSTRate.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPurCGSTRateItemStateChanged(evt);
            }
        });
        cmbPurCGSTRate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbPurCGSTRateFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cmbPurCGSTRateFocusLost(evt);
            }
        });

        cmbSalesCGSTRate.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        cmbSalesCGSTRate.setToolTipText("Select GST percent");
        cmbSalesCGSTRate.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSalesCGSTRateItemStateChanged(evt);
            }
        });

        cmbPurIGSTRate.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        cmbPurIGSTRate.setToolTipText("Select GST percent");
        cmbPurIGSTRate.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPurIGSTRateItemStateChanged(evt);
            }
        });
        cmbPurIGSTRate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbPurIGSTRateFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cmbPurIGSTRateFocusLost(evt);
            }
        });

        cmbSalesIGSTRate.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        cmbSalesIGSTRate.setToolTipText("Select GST percent");
        cmbSalesIGSTRate.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSalesIGSTRateItemStateChanged(evt);
            }
        });

        cmbPurSGSTRate.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        cmbPurSGSTRate.setToolTipText("Select GST percent");
        cmbPurSGSTRate.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPurSGSTRateItemStateChanged(evt);
            }
        });
        cmbPurSGSTRate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbPurSGSTRateFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cmbPurSGSTRateFocusLost(evt);
            }
        });

        cmbSalesSGSTRate.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        cmbSalesSGSTRate.setToolTipText("Select GST percent");
        cmbSalesSGSTRate.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSalesSGSTRateItemStateChanged(evt);
            }
        });
        cmbSalesSGSTRate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbSalesSGSTRateFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cmbSalesSGSTRateFocusLost(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel27.setForeground(java.awt.Color.white);
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("TOTAL");

        txtPurTotAmt.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        txtPurTotAmt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPurTotAmtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPurTotAmtFocusLost(evt);
            }
        });

        txtSalesTotAmt.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        txtSalesTotAmt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSalesTotAmtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSalesTotAmtFocusLost(evt);
            }
        });

        cmbItemName.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        cmbItemName.setToolTipText("Select product");
        cmbItemName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbItemNameItemStateChanged(evt);
            }
        });

        tblPurInvoice.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblPurInvoice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPurInvoiceMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblPurInvoice);

        btnGenerateInvoice.setBackground(java.awt.Color.white);
        btnGenerateInvoice.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        btnGenerateInvoice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/coders/images/printer.png"))); // NOI18N
        btnGenerateInvoice.setText("GENERATE INVOICE");
        btnGenerateInvoice.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnGenerateInvoice.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btnGenerateInvoice.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGenerateInvoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateInvoiceActionPerformed(evt);
            }
        });

        txtTotalInvoice.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel26.setFont(new java.awt.Font("Ubuntu", 1, 13)); // NOI18N
        jLabel26.setForeground(java.awt.Color.white);
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("TOTAL");

        jLabel12.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel12.setForeground(java.awt.Color.white);
        jLabel12.setText("Invoice ID");

        txtInvoiceNo.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        txtInvoiceNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtInvoiceNoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtInvoiceNoFocusLost(evt);
            }
        });
        txtInvoiceNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtInvoiceNoKeyReleased(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jLabel13.setForeground(java.awt.Color.white);
        jLabel13.setText("Dealer");

        cmbDealer.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        cmbDealer.setToolTipText("Select product");
        cmbDealer.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbDealerItemStateChanged(evt);
            }
        });
        cmbDealer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDealerActionPerformed(evt);
            }
        });

        btnSaveTrans.setBackground(java.awt.Color.cyan);
        btnSaveTrans.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        btnSaveTrans.setText("SAVE TRANSACTION");
        btnSaveTrans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveTransActionPerformed(evt);
            }
        });

        btnUpdtTrans.setBackground(java.awt.Color.cyan);
        btnUpdtTrans.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        btnUpdtTrans.setText("UPDATE TRANSACTION");
        btnUpdtTrans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdtTransActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlPurchaseDetailsLayout = new javax.swing.GroupLayout(pnlPurchaseDetails);
        pnlPurchaseDetails.setLayout(pnlPurchaseDetailsLayout);
        pnlPurchaseDetailsLayout.setHorizontalGroup(
            pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPurchaseDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(pnlPurchaseDetailsLayout.createSequentialGroup()
                        .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlPurchaseDetailsLayout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtProductDescription))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlPurchaseDetailsLayout.createSequentialGroup()
                                .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(pnlPurchaseDetailsLayout.createSequentialGroup()
                                        .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cmbUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtHSNCODE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPurchaseRate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSalesRate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(6, 6, 6)
                                .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmbSalesCGSTRate, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbPurCGSTRate, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPurCGSTAmt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSalesCGSTAmt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(6, 6, 6)
                                .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmbSalesSGSTRate, 0, 1, Short.MAX_VALUE)
                                    .addComponent(cmbPurSGSTRate, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtSalesSGSTAmt)
                                    .addComponent(txtPurSGSTAmt, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cmbSalesIGSTRate, 0, 1, Short.MAX_VALUE)
                                    .addComponent(cmbPurIGSTRate, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtSalesIGSTAmt)
                                    .addComponent(txtPurIGSTAmt, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(20, 20, 20)
                        .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                            .addComponent(txtPurTotAmt, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtSalesTotAmt)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPurchaseDetailsLayout.createSequentialGroup()
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtInvoiceNo, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbDealer, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCurrentDate, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTime, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlPurchaseDetailsLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtProductID, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtBarcode, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbItemName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPurchaseDetailsLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPurchaseDetailsLayout.createSequentialGroup()
                                .addComponent(btnNewProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAddProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDeleteProduct)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPrint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPurchaseDetailsLayout.createSequentialGroup()
                                .addComponent(btnUpdtTrans, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSaveTrans, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnGenerateInvoice, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtTotalInvoice, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );

        pnlPurchaseDetailsLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAddProduct, btnDeleteProduct, btnNewProduct, btnPrint});

        pnlPurchaseDetailsLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cmbPurCGSTRate, cmbPurIGSTRate, cmbPurSGSTRate, cmbSalesCGSTRate, cmbSalesIGSTRate, cmbSalesSGSTRate});

        pnlPurchaseDetailsLayout.setVerticalGroup(
            pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPurchaseDetailsLayout.createSequentialGroup()
                .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblCurrentDate)
                        .addComponent(lblTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(txtInvoiceNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13)
                        .addComponent(cmbDealer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtProductID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtBarcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(cmbItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(txtProductDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPurchaseDetailsLayout.createSequentialGroup()
                        .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(cmbUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtHSNCODE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlPurchaseDetailsLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSalesCGSTAmt)))
                    .addGroup(pnlPurchaseDetailsLayout.createSequentialGroup()
                        .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtPurchaseRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cmbPurCGSTRate)
                                .addComponent(txtPurCGSTAmt, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtSalesRate, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cmbSalesCGSTRate, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(pnlPurchaseDetailsLayout.createSequentialGroup()
                            .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtPurSGSTAmt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cmbPurSGSTRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtSalesSGSTAmt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cmbSalesSGSTRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(pnlPurchaseDetailsLayout.createSequentialGroup()
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPurchaseDetailsLayout.createSequentialGroup()
                            .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cmbPurIGSTRate)
                                .addComponent(txtPurIGSTAmt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cmbSalesIGSTRate, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtSalesIGSTAmt)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPurchaseDetailsLayout.createSequentialGroup()
                            .addComponent(txtPurTotAmt)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtSalesTotAmt))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddProduct)
                    .addComponent(btnDeleteProduct)
                    .addComponent(btnPrint)
                    .addComponent(btnNewProduct))
                .addGap(7, 7, 7)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPurchaseDetailsLayout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addGap(34, 34, 34))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlPurchaseDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSaveTrans)
                            .addComponent(btnUpdtTrans))
                        .addComponent(btnGenerateInvoice)
                        .addComponent(txtTotalInvoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        pnlPurchaseDetailsLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cmbPurCGSTRate, cmbPurIGSTRate, cmbPurSGSTRate, cmbSalesCGSTRate, cmbSalesIGSTRate, cmbSalesSGSTRate});

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlPurchaseDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlPurchaseDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1310, 683));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    //Program to set one instance of ManageProduct Form
    private static PurchaseInvoice obj=null;
    public static PurchaseInvoice getObj(){
        if(obj==null){
            obj=new PurchaseInvoice();
        }
        return obj;
    }
    String dt="dd-MM-yyyy";
    String tm;
    public void CurrentDate(){   
        Thread clock;
        clock = new Thread(){
            @Override
            public void run(){
                for(;;){
                    Calendar cal = new GregorianCalendar();
                    int month=cal.get(Calendar.MONTH)+1;
                    int day=cal.get(Calendar.DAY_OF_MONTH);
                    int year=cal.get(Calendar.YEAR);
                    dt=year+"-"+month+"-"+day;
                    lblCurrentDate.setText("Date: "+dt);
                    
                    int second= cal.get(Calendar.SECOND);
                    int minute=cal.get(Calendar.MINUTE);
                    int hour=cal.get(Calendar.HOUR);
                    String AM_PM = cal.get(Calendar.AM_PM) == 0 ? "AM" : "PM";
                    tm=hour+":"+minute+":"+second+" "+AM_PM;
                    lblTime.setText("Time: "+tm);
                    try {
                        sleep(1000);
                    }
                    catch (InterruptedException ex) {
                        //Logger.getLogger(Product.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        };
        clock.start();  
    }
    //Program to get products list
    public void getProducts(){
        try{
            cmbItemName.removeAllItems();
            cmbItemName.addItem("----Select Item----");
            String sql="Select * from Products order by p_itemName ASC";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            while(rs.next()){
                cmbItemName.addItem(rs.getString("p_itemName"));
            }
            pst.close();
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e,"getProducts() Exception",JOptionPane.ERROR_MESSAGE);
        }
    }
    //Program to set new INVOICE id
    int invID=0;
    public void getNewInvoiceID(){
        try{
            String sql="Select * from PurchaseTransactions";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            while(rs.next()){
                invID=rs.getInt("ptInvoiceID");
            }
            invID++;
            txtInvoiceNo.setText(String.valueOf(invID));
            pst.close();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    //Program to get GST from GST Table
    public void getGST(){
        try{            
            cmbPurCGSTRate.removeAllItems();
            cmbPurSGSTRate.removeAllItems();
            cmbPurIGSTRate.removeAllItems();
            cmbSalesCGSTRate.removeAllItems();
            cmbSalesSGSTRate.removeAllItems();
            cmbSalesIGSTRate.removeAllItems();
            String sql="Select * from gstRates order by rateValue ASC";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            while(rs.next()){
                cmbPurCGSTRate.addItem(rs.getString("rateValue"));
                cmbPurSGSTRate.addItem(rs.getString("rateValue"));
                cmbPurIGSTRate.addItem(rs.getString("rateValue"));
                cmbSalesCGSTRate.addItem(rs.getString("rateValue"));
                cmbSalesSGSTRate.addItem(rs.getString("rateValue"));
                cmbSalesIGSTRate.addItem(rs.getString("rateValue"));
            }
            pst.close();            
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e,"getGST() Exception",JOptionPane.ERROR_MESSAGE);
        }
    }
    //Program to get Dealer list
    int dID=0;
    public void getDealerList(){
        try{
            cmbDealer.removeAllItems();
            cmbDealer.addItem("----Select Dealer----");
            String sql="Select * from Dealer order by dName ASC";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            while(rs.next()){
                cmbDealer.addItem(rs.getString("dName"));
            }
            pst.close();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e,"getDealerList() Exception",JOptionPane.ERROR_MESSAGE);
        }
    }
    //Program to reset purchase fields
    public void resetPurFields(){        
        txtPurchaseRate.setText("0");
        txtPurCGSTAmt.setText("0");
        txtPurSGSTAmt.setText("0");
        txtPurIGSTAmt.setText("0");
        txtPurTotAmt.setText("0");
        cmbPurCGSTRate.setSelectedIndex(0);
        cmbPurSGSTRate.setSelectedIndex(0);
        cmbPurIGSTRate.setSelectedIndex(0);
    }
    //Program to reset sales fields
    public void resetSalesFields(){
        txtQty.setText("0");        
        txtSalesRate.setText("0");
        txtSalesCGSTAmt.setText("0");
        txtSalesSGSTAmt.setText("0");
        txtSalesIGSTAmt.setText("0");
        txtSalesTotAmt.setText("0");
        cmbSalesCGSTRate.setSelectedIndex(0);
        cmbSalesSGSTRate.setSelectedIndex(0);
        cmbSalesIGSTRate.setSelectedIndex(0);
        btnAddProduct.setEnabled(true);
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        CurrentDate();
        getNewInvoiceID();
        getProducts();
        getGST();
        getDealerList();
        resetPurFields();
        resetSalesFields();
        readPurTrans();
    }//GEN-LAST:event_formWindowOpened
    //Program to empty Purchase Details field
    public void clearPurchaseDetails(){
        txtProductID.setText("");
        txtBarcode.setText("");
        txtHSNCODE.setText("");
        cmbItemName.setSelectedItem("-----Select Item-----");
    }
    private void btnNewProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewProductActionPerformed
        // TODO add your handling code here:
        resetPurFields();
        resetSalesFields();
        clearPurchaseDetails();
    }//GEN-LAST:event_btnNewProductActionPerformed
    //Program to add products to Purchase inward table
    public void addToPurchaseInward(){
        try{
            String sql="insert into PurchaseInward (piInvoiceID,piDealerName,"
                    + "piProdID,piProdBarcode,piItemName,piDescription,piQty,"
                    + "piUnit,piHSNCode,piDate,piCGSTRate,piCGSTAmt,piSGSTRate,"
                    + "piSGSTAmt,piIGSTRate,piIGSTAmt,piTotalAmt,piRate)"
                    + "values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
            pst=conn.prepareStatement(sql);
            pst.setInt(1,Integer.parseInt(txtInvoiceNo.getText()));
            pst.setString(2, cmbDealer.getSelectedItem().toString());
            pst.setInt(3, Integer.parseInt(txtProductID.getText()));
            pst.setString(4, txtBarcode.getText());
            pst.setString(5, cmbItemName.getSelectedItem().toString());
            pst.setString(6, txtProductDescription.getText());
            pst.setString(7, txtQty.getText());
            pst.setString(8, cmbUnit.getSelectedItem().toString());
            pst.setString(9, txtHSNCODE.getText());
            pst.setString(10, dt);
            pst.setString(11, cmbPurCGSTRate.getSelectedItem().toString());
            pst.setString(12, txtPurCGSTAmt.getText());
            pst.setString(13, cmbPurSGSTRate.getSelectedItem().toString());
            pst.setString(14, txtPurSGSTAmt.getText());
            pst.setString(15, cmbPurIGSTRate.getSelectedItem().toString());
            pst.setString(16, txtPurIGSTAmt.getText());
            pst.setString(17, txtPurTotAmt.getText());
            pst.setString(18, txtPurchaseRate.getText());
            pst.execute();
            pst.close();            
        }
        catch(NumberFormatException | SQLException e){
            JOptionPane.showMessageDialog(null, e,"addToPurchaseInward()",JOptionPane.ERROR_MESSAGE);
        }
    }
    //Program to add product stock and GST to existing product stock in Products table
    public void updtProdStocGST(){
        try{
            newStock=pQty+Double.parseDouble(txtQty.getText());
            String sql="update Products set p_description='"+txtProductDescription.getText()+"',p_hsncode='"+txtHSNCODE.getText()+"',"
                    + "p_qty='"+newStock+"',p_unit='"+cmbUnit.getSelectedItem().toString()+"',p_rate='"+txtPurchaseRate.getText()+"',"
                    + "p_cgst='"+cmbSalesCGSTRate.getSelectedItem().toString()+"',p_sgst='"+cmbSalesSGSTRate.getSelectedItem().toString()+"',"
                    + "p_igst='"+cmbSalesIGSTRate.getSelectedItem().toString()+"' where pid='"+txtProductID.getText()+"'";
            pst=conn.prepareStatement(sql);
            pst.execute();
            pst.close();
            JOptionPane.showMessageDialog(null, "Product stock has been updated successfully.","Stock Updated",JOptionPane.INFORMATION_MESSAGE);
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e,"addProdStocGST() Exception",JOptionPane.ERROR_MESSAGE);
        }
    }
    //Program to add Purchase Transaction details
    private void btnAddProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProductActionPerformed
        // TODO add your handling code here:
        addToPurchaseInward();
        updtProdStocGST();
        getPurInwardOnInvoiceNoToTbl();
        calcGT();
    }//GEN-LAST:event_btnAddProductActionPerformed
    //Program to Delete added product from PurchaseInwards
    public void delPurInward(){
        try{
            String sql="Delete from PurchaseInward where piInvoiceID='"+txtInvoiceNo.getText()+"' AND piProdID='"+txtProductID.getText()+"'";
            pst=conn.prepareStatement(sql);
            pst.execute();
            pst.close();
            JOptionPane.showMessageDialog(null, "Item successfully removed from Invoice","Item Deleted",JOptionPane.INFORMATION_MESSAGE);
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e,"delPurInward() Exception",JOptionPane.ERROR_MESSAGE);
        }
    }
    //Program to update newStock
    double qtval=0;
    public void updtStock(){
        try{
            qtval=Double.parseDouble(txtQty.getText());
            if(currStock>=qtval){
                newStock=currStock-Double.parseDouble(txtQty.getText());
            }
            else if(currStock<=qtval){
                newStock=Double.parseDouble(txtQty.getText())-currStock;
            }            
            String sql="Update Products set p_qty='"+newStock+"' where pid='"+txtProductID.getText()+"'";
            pst=conn.prepareStatement(sql);
            pst.execute();
            pst.close();            
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e,"updtStock() Exception",JOptionPane.ERROR_MESSAGE);
        }
    }
    private void btnDeleteProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteProductActionPerformed
        // TODO add your handling code here:
       delPurInward();
       updtStock();
       getPurInwardOnInvoiceNoToTbl();
       calcGT();
    }//GEN-LAST:event_btnDeleteProductActionPerformed
    //Program to get product details on barcode scan
    double pQty=0;
    double sCGSTRate=0,sSGSTRate=0,sIGSTRate=0;
    double sRate=0;    
    double newStock;
    public void barcodeScan(){
        try{
            String sql="Select * from Products where p_barcode='"+txtBarcode.getText()+"'";
            pst=conn.prepareStatement(sql);
            rs2=pst.executeQuery();
            if(rs2.next()){
                txtProductID.setText(rs2.getString("pid"));
                cmbItemName.setSelectedItem(rs2.getString("p_itemName"));
                txtProductDescription.setText(rs2.getString("p_description"));
                cmbUnit.setSelectedItem(rs2.getString("p_unit"));
                txtHSNCODE.setText(rs2.getString("p_hsncode"));
                pQty=rs2.getInt("p_qty");
                sRate=rs2.getInt("p_rate");
                txtSalesRate.setText(String.valueOf(sRate));
                sCGSTRate=rs2.getInt("p_cgst");
                cmbSalesCGSTRate.setSelectedItem(String.valueOf(sCGSTRate));
                sSGSTRate=rs2.getInt("p_sgst");
                cmbSalesSGSTRate.setSelectedItem(String.valueOf(sSGSTRate));
                sIGSTRate=rs2.getInt("p_igst");
                cmbSalesIGSTRate.setSelectedItem(String.valueOf(sIGSTRate));
            }
            else{
                JOptionPane.showMessageDialog(null, "Scanned Barcode doesn't match with any existing product. Please add it with new product or update any exisiting products barcode.","PRODUCT NOT FOUND",JOptionPane.ERROR_MESSAGE);                
                txtProductID.setText("");
                cmbItemName.setSelectedItem("");
                txtProductDescription.setText("");
                cmbUnit.setSelectedItem("");
                txtHSNCODE.setText("");
                pQty=0;
                sRate=0;
                txtSalesRate.setText("0");
                sCGSTRate=0;
                cmbSalesCGSTRate.setSelectedIndex(0);
                sSGSTRate=0;
                cmbSalesSGSTRate.setSelectedIndex(0);
                sIGSTRate=0;
                cmbSalesIGSTRate.setSelectedIndex(0);
            }
            pst.close();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e,"barcodeScan() Exception",JOptionPane.ERROR_MESSAGE);
        }
    }
    private void txtBarcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBarcodeActionPerformed
        // TODO add your handling code here:
        barcodeScan();
    }//GEN-LAST:event_txtBarcodeActionPerformed
    
    private void txtQtyFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQtyFocusGained
        // TODO add your handling code here:
        txtQty.setBackground(Color.yellow);
    }//GEN-LAST:event_txtQtyFocusGained

    private void txtQtyFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQtyFocusLost
        // TODO add your handling code here:
        txtQty.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtQtyFocusLost

    private void txtBarcodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBarcodeFocusGained
        // TODO add your handling code here:
        txtBarcode.setBackground(Color.yellow);
    }//GEN-LAST:event_txtBarcodeFocusGained

    private void txtBarcodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBarcodeFocusLost
        // TODO add your handling code here:
        txtBarcode.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtBarcodeFocusLost

    private void txtPurchaseRateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPurchaseRateFocusGained
        // TODO add your handling code here:
        txtPurchaseRate.setBackground(Color.yellow);
    }//GEN-LAST:event_txtPurchaseRateFocusGained

    private void txtPurchaseRateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPurchaseRateFocusLost
        // TODO add your handling code here:
        txtPurchaseRate.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtPurchaseRateFocusLost

    private void txtPurCGSTAmtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPurCGSTAmtFocusGained
        // TODO add your handling code here:
        txtPurCGSTAmt.setBackground(Color.yellow);
    }//GEN-LAST:event_txtPurCGSTAmtFocusGained

    private void txtPurCGSTAmtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPurCGSTAmtFocusLost
        // TODO add your handling code here:
        txtPurCGSTAmt.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtPurCGSTAmtFocusLost

    private void txtPurSGSTAmtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPurSGSTAmtFocusGained
        // TODO add your handling code here:
        txtPurSGSTAmt.setBackground(Color.yellow);
    }//GEN-LAST:event_txtPurSGSTAmtFocusGained

    private void txtPurSGSTAmtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPurSGSTAmtFocusLost
        // TODO add your handling code here:
        txtPurSGSTAmt.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtPurSGSTAmtFocusLost

    private void txtPurIGSTAmtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPurIGSTAmtFocusGained
        // TODO add your handling code here:
        txtPurIGSTAmt.setBackground(Color.yellow);
    }//GEN-LAST:event_txtPurIGSTAmtFocusGained

    private void txtPurIGSTAmtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPurIGSTAmtFocusLost
        // TODO add your handling code here:
        txtPurIGSTAmt.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtPurIGSTAmtFocusLost

    private void cmbUnitFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbUnitFocusGained
        // TODO add your handling code here:
        cmbUnit.setBackground(Color.yellow);
    }//GEN-LAST:event_cmbUnitFocusGained

    private void cmbUnitFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbUnitFocusLost
        // TODO add your handling code here:
        cmbUnit.setBackground(Color.WHITE);
    }//GEN-LAST:event_cmbUnitFocusLost

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        obj=null;
    }//GEN-LAST:event_formWindowClosing
    //Program to Print Product List
    public void printOptions(){
        try{
            String sql="Select * from Products,Company";
            JasperDesign jd= JRXmlLoader.load("src/coders/reports/a4ProductList.jrxml");
            JRDesignQuery qry=new JRDesignQuery();
            qry.setText(sql);
            jd.setQuery(qry);
            JasperReport jr= JasperCompileManager.compileReport(jd);
            JasperPrint jp=JasperFillManager.fillReport(jr, null,conn);
            JasperViewer.viewReport(jp,false);
        }catch(JRException e){
            JOptionPane.showMessageDialog(null, e,"printOption() Exception",JOptionPane.ERROR_MESSAGE);
        }
    }    
    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        // TODO add your handling code here:
        printOptions();
    }//GEN-LAST:event_btnPrintActionPerformed

    private void txtHSNCODEFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHSNCODEFocusGained
        // TODO add your handling code here:
        txtHSNCODE.setBackground(Color.yellow);
    }//GEN-LAST:event_txtHSNCODEFocusGained

    private void txtHSNCODEFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtHSNCODEFocusLost
        // TODO add your handling code here:
        txtHSNCODE.setBackground(Color.white);
    }//GEN-LAST:event_txtHSNCODEFocusLost

    private void txtSalesRateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSalesRateFocusGained
        // TODO add your handling code here:
        txtSalesRate.setBackground(Color.yellow);
    }//GEN-LAST:event_txtSalesRateFocusGained

    private void txtSalesRateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSalesRateFocusLost
        // TODO add your handling code here:
        txtSalesRate.setBackground(Color.white);
    }//GEN-LAST:event_txtSalesRateFocusLost

    private void txtSalesCGSTAmtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSalesCGSTAmtFocusGained
        // TODO add your handling code here:
        txtSalesCGSTAmt.setBackground(Color.yellow);
    }//GEN-LAST:event_txtSalesCGSTAmtFocusGained

    private void txtSalesCGSTAmtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSalesCGSTAmtFocusLost
        // TODO add your handling code here:
        txtSalesCGSTAmt.setBackground(Color.white);
    }//GEN-LAST:event_txtSalesCGSTAmtFocusLost

    private void txtSalesSGSTAmtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSalesSGSTAmtFocusGained
        // TODO add your handling code here:
        txtSalesSGSTAmt.setBackground(Color.yellow);
    }//GEN-LAST:event_txtSalesSGSTAmtFocusGained

    private void txtSalesSGSTAmtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSalesSGSTAmtFocusLost
        // TODO add your handling code here:
        txtSalesSGSTAmt.setBackground(Color.white);
    }//GEN-LAST:event_txtSalesSGSTAmtFocusLost

    private void txtSalesIGSTAmtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSalesIGSTAmtFocusGained
        // TODO add your handling code here:
        txtSalesIGSTAmt.setBackground(Color.yellow);
    }//GEN-LAST:event_txtSalesIGSTAmtFocusGained

    private void txtSalesIGSTAmtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSalesIGSTAmtFocusLost
        // TODO add your handling code here:
        txtSalesIGSTAmt.setBackground(Color.white);
    }//GEN-LAST:event_txtSalesIGSTAmtFocusLost
    //Program to generate Invoice
    public void genInvoice(){
        try{
                String sql="Select * from PurchaseTransactions,PurchaseInward where PurchaseInward.piInvoiceID='"+txtInvoiceNo.getText()+"' AND PurchaseTransactions.ptInvoiceID='"+txtInvoiceNo.getText()+"'";
                JasperDesign jd= JRXmlLoader.load("src/coders/reports/a4PurchaseInvoice.jrxml");
                JRDesignQuery qry=new JRDesignQuery();
                qry.setText(sql);
                jd.setQuery(qry);
                JasperReport jr= JasperCompileManager.compileReport(jd);
                JasperPrint jp=JasperFillManager.fillReport(jr, null,conn);
                JasperViewer.viewReport(jp,false);
            }
            catch(JRException e){
                JOptionPane.showMessageDialog(null, e,"genInvoice() Exception",JOptionPane.ERROR_MESSAGE);
            }
    }
    public void purInvoice(){
        try{
            String sql="Select * from Company,PurchaseTransactions,PurchaseInward where PurchaseInward.piInvoiceID='"+txtInvoiceNo.getText()+"' AND PurchaseTransactions.ptInvoiceID='"+txtInvoiceNo.getText()+"'";
                JasperDesign jd= JRXmlLoader.load("src/coders/reports/a4PurchaseInvoice.jrxml");
                JRDesignQuery qry=new JRDesignQuery();
                qry.setText(sql);
                jd.setQuery(qry);
                JasperReport jr= JasperCompileManager.compileReport(jd);
                JasperPrint jp=JasperFillManager.fillReport(jr, null,conn);
                JasperViewer.viewReport(jp,false);
        }
        catch(JRException e){
            JOptionPane.showMessageDialog(null, e,"purInvoice() Exception",JOptionPane.ERROR_MESSAGE);
        }
    }
    private void btnGenerateInvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateInvoiceActionPerformed
        // TODO add your handling code here:
        purInvoice();
    }//GEN-LAST:event_btnGenerateInvoiceActionPerformed

    private void txtPurTotAmtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPurTotAmtFocusGained
        // TODO add your handling code here:
        txtPurTotAmt.setBackground(Color.yellow);
    }//GEN-LAST:event_txtPurTotAmtFocusGained

    private void txtPurTotAmtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPurTotAmtFocusLost
        // TODO add your handling code here:
        txtPurTotAmt.setBackground(Color.white);
    }//GEN-LAST:event_txtPurTotAmtFocusLost

    private void txtSalesTotAmtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSalesTotAmtFocusGained
        // TODO add your handling code here:
        txtSalesTotAmt.setBackground(Color.yellow);
    }//GEN-LAST:event_txtSalesTotAmtFocusGained

    private void txtSalesTotAmtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSalesTotAmtFocusLost
        // TODO add your handling code here:
        txtSalesTotAmt.setBackground(Color.white);
    }//GEN-LAST:event_txtSalesTotAmtFocusLost

    private void txtProductIDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtProductIDFocusGained
        // TODO add your handling code here:
        txtProductID.setBackground(Color.yellow);
    }//GEN-LAST:event_txtProductIDFocusGained

    private void txtProductIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtProductIDFocusLost
        // TODO add your handling code here:
        txtProductID.setBackground(Color.white);
    }//GEN-LAST:event_txtProductIDFocusLost

    private void cmbPurCGSTRateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbPurCGSTRateFocusGained
        // TODO add your handling code here:
        cmbPurCGSTRate.setBackground(Color.yellow);
    }//GEN-LAST:event_cmbPurCGSTRateFocusGained

    private void cmbPurCGSTRateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbPurCGSTRateFocusLost
        // TODO add your handling code here:
        cmbPurCGSTRate.setBackground(Color.white);
    }//GEN-LAST:event_cmbPurCGSTRateFocusLost

    private void cmbPurSGSTRateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbPurSGSTRateFocusGained
        // TODO add your handling code here:
        cmbPurSGSTRate.setBackground(Color.yellow);
    }//GEN-LAST:event_cmbPurSGSTRateFocusGained

    private void cmbSalesSGSTRateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbSalesSGSTRateFocusGained
        // TODO add your handling code here:
        cmbSalesSGSTRate.setBackground(Color.yellow);
    }//GEN-LAST:event_cmbSalesSGSTRateFocusGained

    private void cmbPurSGSTRateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbPurSGSTRateFocusLost
        // TODO add your handling code here:
        cmbPurSGSTRate.setBackground(Color.white);
    }//GEN-LAST:event_cmbPurSGSTRateFocusLost

    private void cmbSalesSGSTRateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbSalesSGSTRateFocusLost
        // TODO add your handling code here:
        cmbSalesSGSTRate.setBackground(Color.white);
    }//GEN-LAST:event_cmbSalesSGSTRateFocusLost

    private void cmbPurIGSTRateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbPurIGSTRateFocusGained
        // TODO add your handling code here:
        cmbPurIGSTRate.setBackground(Color.yellow);
    }//GEN-LAST:event_cmbPurIGSTRateFocusGained

    private void cmbPurIGSTRateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbPurIGSTRateFocusLost
        // TODO add your handling code here:
        cmbPurIGSTRate.setBackground(Color.white);
    }//GEN-LAST:event_cmbPurIGSTRateFocusLost

    private void txtProductDescriptionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtProductDescriptionFocusLost
        // TODO add your handling code here:
        txtProductDescription.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtProductDescriptionFocusLost

    private void txtProductDescriptionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtProductDescriptionFocusGained
        // TODO add your handling code here:
        txtProductDescription.setBackground(Color.yellow);
    }//GEN-LAST:event_txtProductDescriptionFocusGained
    //Program to get product details on cmbItem Selection
    public void getItemDetailOnCmbSelect(){
        try{
            String sql="Select * from Products where p_itemName='"+cmbItemName.getSelectedItem().toString()+"'";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            if(rs.next()){
                txtProductID.setText(rs.getString("pid"));
                txtProductDescription.setText(rs.getString("p_description"));
                txtBarcode.setText(rs.getString("p_barcode"));
                cmbUnit.setSelectedItem(rs.getString("p_unit"));
                txtHSNCODE.setText(rs.getString("p_hsncode"));
                pQty=rs.getInt("p_qty");
                sRate=rs.getInt("p_rate");
                txtSalesRate.setText(String.valueOf(sRate));
                sCGSTRate=rs.getInt("p_cgst");
                cmbSalesCGSTRate.setSelectedItem(String.valueOf(sCGSTRate));
                sSGSTRate=rs.getInt("p_sgst");
                cmbSalesSGSTRate.setSelectedItem(String.valueOf(sSGSTRate));
                sIGSTRate=rs.getInt("p_igst");
                cmbSalesIGSTRate.setSelectedItem(String.valueOf(sIGSTRate));
            }
            pst.close();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e,"getItemDetailOnCmbSelect() Exception",JOptionPane.ERROR_MESSAGE);
        }
    }
    private void cmbItemNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbItemNameItemStateChanged
        // TODO add your handling code here:
        getItemDetailOnCmbSelect();
    }//GEN-LAST:event_cmbItemNameItemStateChanged

    private void txtInvoiceNoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtInvoiceNoFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInvoiceNoFocusGained

    private void txtInvoiceNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtInvoiceNoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInvoiceNoFocusLost
    //Program to get DealerID
    public void getdID(){
        try{
            String sql="Select * from Dealer where dName='"+cmbDealer.getSelectedItem().toString()+"'";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            while(rs.next()){
                dID=rs.getInt("dID");
            }
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e,"getdID() Exception",JOptionPane.ERROR_MESSAGE);
        }
    }
    private void cmbDealerItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbDealerItemStateChanged
        // TODO add your handling code here:
        getdID();
    }//GEN-LAST:event_cmbDealerItemStateChanged

    private void cmbDealerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDealerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbDealerActionPerformed
    //Program to calulate Purchase cost
    double purRate=0,purCGST=0,purSGST=0,purIGST=0,purCost=0,pCGST=0,pSGST=0,pIGST=0;
    public void calcPurchaseCost(){
        try{
            purRate=Double.parseDouble(txtPurchaseRate.getText());
            purCGST=Double.parseDouble(cmbPurCGSTRate.getSelectedItem().toString());
            purSGST=Double.parseDouble(cmbPurSGSTRate.getSelectedItem().toString());
            purIGST=Double.parseDouble(cmbPurIGSTRate.getSelectedItem().toString());
            pCGST=(purRate*Double.parseDouble(txtQty.getText())*purCGST)/100;
            pSGST=(purRate*Double.parseDouble(txtQty.getText())*purSGST)/100;
            pIGST=(purRate*Double.parseDouble(txtQty.getText())*purIGST)/100;
            purCost=Math.round((purRate*Double.parseDouble(txtQty.getText()))+pCGST+pSGST+pIGST);
            txtPurCGSTAmt.setText(String.valueOf(pCGST));
            txtPurSGSTAmt.setText(String.valueOf(pSGST));
            txtPurIGSTAmt.setText(String.valueOf(pIGST));
            txtPurTotAmt.setText(String.valueOf(purCost));            
        }
        catch(NumberFormatException e){
            //JOptionPane.showMessageDialog(null, e,"calcPurchaseCost() Exception",JOptionPane.ERROR_MESSAGE);
        }
    }
    //Program to calulate Purchase cost
    double salesRate=0,salesCGST=0,salesSGST=0,salesIGST=0,salesCost=0,sCGST=0,sSGST=0,sIGST=0;
    public void calcSalesCost(){
        try{
            salesRate=Double.parseDouble(txtSalesRate.getText());
            salesCGST=Double.parseDouble(cmbSalesCGSTRate.getSelectedItem().toString());
            salesSGST=Double.parseDouble(cmbSalesSGSTRate.getSelectedItem().toString());
            salesIGST=Double.parseDouble(cmbSalesIGSTRate.getSelectedItem().toString());
            sCGST=(salesRate*Double.parseDouble(txtQty.getText())*salesCGST)/100;
            sSGST=(salesRate*Double.parseDouble(txtQty.getText())*salesSGST)/100;
            sIGST=(salesRate*Double.parseDouble(txtQty.getText())*salesIGST)/100;
            salesCost=Math.round((salesRate*Double.parseDouble(txtQty.getText()))+sCGST+sSGST+sIGST);
            txtSalesCGSTAmt.setText(String.valueOf(sCGST));
            txtSalesSGSTAmt.setText(String.valueOf(sSGST));
            txtSalesIGSTAmt.setText(String.valueOf(sIGST));
            txtSalesTotAmt.setText(String.valueOf(salesCost));            
        }
        catch(NumberFormatException e){
            //JOptionPane.showMessageDialog(null, e,"calcPurchaseCost() Exception",JOptionPane.ERROR_MESSAGE);
        }
    }
    private void txtPurchaseRateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPurchaseRateKeyReleased
        // TODO add your handling code here:
        if(!"".equals(txtPurchaseRate.getText())){
            calcPurchaseCost();
        }
        else{
            resetPurFields();
        }
    }//GEN-LAST:event_txtPurchaseRateKeyReleased

    private void cmbPurCGSTRateItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPurCGSTRateItemStateChanged
        // TODO add your handling code here:
        if(!"".equals(cmbPurCGSTRate.getSelectedItem().toString()) || !"0.0".equals(cmbPurCGSTRate.getSelectedItem().toString())){
            calcPurchaseCost();   
        }
    }//GEN-LAST:event_cmbPurCGSTRateItemStateChanged

    private void cmbPurSGSTRateItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPurSGSTRateItemStateChanged
        // TODO add your handling code here:
        if(!"".equals(cmbPurSGSTRate.getSelectedItem().toString()) || !"0.0".equals(cmbPurSGSTRate.getSelectedItem().toString())){
            calcPurchaseCost();
        }        
    }//GEN-LAST:event_cmbPurSGSTRateItemStateChanged

    private void cmbPurIGSTRateItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPurIGSTRateItemStateChanged
        // TODO add your handling code here:
        if(!"".equals(cmbPurIGSTRate.getSelectedItem().toString()) || !"0.0".equals(cmbPurIGSTRate.getSelectedItem().toString())){
            calcPurchaseCost();            
        }
    }//GEN-LAST:event_cmbPurIGSTRateItemStateChanged

    private void txtSalesRateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSalesRateKeyReleased
        // TODO add your handling code here:
        if(!"".equals(txtSalesRate.getText())){
            calcSalesCost();
        }
    }//GEN-LAST:event_txtSalesRateKeyReleased

    private void txtQtyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtQtyKeyReleased
        // TODO add your handling code here: 
        if(!"".equals(txtQty.getText())){
            calcPurchaseCost();
            calcSalesCost();
        }
        else{
            txtQty.setText("0");
        }
    }//GEN-LAST:event_txtQtyKeyReleased

    private void cmbSalesCGSTRateItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSalesCGSTRateItemStateChanged
        // TODO add your handling code here:
        if(!"".equals(cmbSalesCGSTRate.getSelectedItem().toString()) || !"0.0".equals(cmbSalesCGSTRate.getSelectedItem().toString())){
            calcSalesCost();
        }
    }//GEN-LAST:event_cmbSalesCGSTRateItemStateChanged

    private void cmbSalesSGSTRateItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSalesSGSTRateItemStateChanged
        // TODO add your handling code here:
        if(!"".equals(cmbSalesSGSTRate.getSelectedItem().toString()) || !"0.0".equals(cmbSalesSGSTRate.getSelectedItem().toString())){
            calcSalesCost();
        }
    }//GEN-LAST:event_cmbSalesSGSTRateItemStateChanged

    private void cmbSalesIGSTRateItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSalesIGSTRateItemStateChanged
        // TODO add your handling code here:
        if(!"".equals(cmbSalesIGSTRate.getSelectedItem().toString()) || !"0.0".equals(cmbSalesIGSTRate.getSelectedItem().toString())){
            calcSalesCost();
        }
    }//GEN-LAST:event_cmbSalesIGSTRateItemStateChanged
    //Program to get selected data to fields
    int prID=0;//To be used while deleting any entry
    double prInQty=0;//To be used while updating Product Stock
    public void getTblDataToField(){
        try{
            int row=tblPurInvoice.getSelectedRow();
            String ProdID=tblPurInvoice.getModel().getValueAt(row, 0).toString();
            String sql="Select * from PurchaseInward where piID='"+ProdID+"'";
            pst=conn.prepareStatement(sql);
            rs2=pst.executeQuery();
            if(rs2.next()){
                txtInvoiceNo.setText(rs2.getString("piInvoiceID"));
                cmbDealer.setSelectedItem(rs2.getString("piDealerName"));
                txtProductID.setText(rs2.getString("piProdID"));
                prID=rs2.getInt("piProdID");
                txtBarcode.setText(rs2.getString("piProdBarcode"));
                cmbItemName.setSelectedItem(rs2.getString("piItemName"));
                txtProductDescription.setText(rs2.getString("piDescription"));
                txtQty.setText(rs2.getString("piQty"));
                prInQty=rs2.getDouble("piQty");
                cmbUnit.setSelectedItem(rs2.getString("piUnit"));
                txtHSNCODE.setText(rs2.getString("piHSNCode"));
                txtPurchaseRate.setText(rs2.getString("piRate"));
                cmbPurCGSTRate.setSelectedItem(rs2.getString("piCGSTRate"));
                txtPurCGSTAmt.setText(rs2.getString("piCGSTAmt"));
                cmbPurSGSTRate.setSelectedItem(rs2.getString("piSGSTRate"));
                txtPurSGSTAmt.setText(rs2.getString("piSGSTAmt"));
                cmbPurIGSTRate.setSelectedItem(rs2.getString("piIGSTRate"));
                txtPurIGSTAmt.setText(rs2.getString("piIGSTAmt"));
                txtPurTotAmt.setText(rs2.getString("piTotalAmt"));
                btnAddProduct.setEnabled(false);
                btnDeleteProduct.setEnabled(true);        
            }
            pst.close();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    //Program to get current stock data from Product table
    double currStock=0;
    public void getCurrProdStock(){
        try{
            String sql="Select * from Products where pid='"+prID+"'";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            if(rs.next()){
                currStock=rs.getDouble("p_qty");
            }
            pst.close();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e,"getCurrProdStock() Exception",JOptionPane.ERROR_MESSAGE);
        }
    }
    private void tblPurInvoiceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPurInvoiceMouseClicked
        // TODO add your handling code here:
        getTblDataToField();
    }//GEN-LAST:event_tblPurInvoiceMouseClicked
    //Program to get Invoice Inward from Purchase
    double TOTAL=0;
    public void calcGT(){
        try{
            String invNoVal=txtInvoiceNo.getText();
            String sql="Select * from PurchaseInward where piInvoiceID LIKE ?";
            pst=conn.prepareStatement(sql);
            pst.setString(1, "%"+invNoVal+"%");
            rs=pst.executeQuery();
            while(rs.next()){
                TOTAL=TOTAL+rs.getDouble("piTotalAmt");
            }
            txtTotalInvoice.setText(String.valueOf(TOTAL));
            pst.close();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e,"getPurInwardOnInvoiceNo() Exception",JOptionPane.ERROR_MESSAGE);
        }
    }
    public void getPurInwardOnInvoiceNoToTbl(){
        try{
            String invNoVal=txtInvoiceNo.getText();
            String sql="Select * from PurchaseInward where piInvoiceID LIKE ?";
            pst=conn.prepareStatement(sql);
            pst.setString(1, "%"+invNoVal+"%");
            rs=pst.executeQuery();
            tblPurInvoice.setModel(DbUtils.resultSetToTableModel(rs));
            pst.close();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e,"getPurInwardOnInvoiceNo() Exception",JOptionPane.ERROR_MESSAGE);
        }        
    }
    public void getDealerFromPI(){
        try{
            String invNoVal=txtInvoiceNo.getText();
            String sql="Select * from PurchaseInward where piInvoiceID LIKE ?";
            pst=conn.prepareStatement(sql);
            pst.setString(1, "%"+invNoVal+"%");
            rs=pst.executeQuery();
            while(rs.next()){
                cmbDealer.setSelectedItem("piDealerName");
            }
            pst.close();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e,"getPurInwardOnInvoiceNo() Exception",JOptionPane.ERROR_MESSAGE);
        } 
    }
    public void readPI(){
        try{
            String invNoVal=txtInvoiceNo.getText();
            String sql="Select * from PurchaseInward where piInvoiceID LIKE ?";
            pst=conn.prepareStatement(sql);
            pst.setString(1, "%"+invNoVal+"%");
            rs=pst.executeQuery();
            if(rs.next()){
                cmbDealer.setSelectedItem(rs.getString("piDealerName"));
            }
            pst.close();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e,"readPI() Exception",JOptionPane.ERROR_MESSAGE);
        }  
    }
    //Program to read Purchase Transactions to find existing invoice no
    public void readPurTrans(){
        try{
            String sql="Select * from PurchaseTransactions where ptInvoiceID='"+txtInvoiceNo.getText()+"'";
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            if(rs.next()){
                btnUpdtTrans.setEnabled(true);
                btnSaveTrans.setEnabled(false);
            }
            else{
                btnUpdtTrans.setEnabled(false);
                btnSaveTrans.setEnabled(true);
            }
            pst.close();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e,"readPurTrans() Exception",JOptionPane.ERROR_MESSAGE);
        }
    }
    private void txtInvoiceNoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInvoiceNoKeyReleased
        // TODO add your handling code here:
        getPurInwardOnInvoiceNoToTbl();
        getDealerFromPI();
        calcGT();
        readPurTrans();
    }//GEN-LAST:event_txtInvoiceNoKeyReleased
    //Program to save complete invoice
    double purTot=0;
    public void saveInvoice(){
        try{
            String sql="Select * from PurchaseInward where piID LIKE ?";
            pst=conn.prepareStatement(sql);
            pst.setString(1, txtInvoiceNo.getText());
            rs=pst.executeQuery();
            while(rs.next()){
                purTot=purTot+rs.getDouble("piTotalAmt");
            }
            pst.close();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, e,"saveInvoice() Exception",JOptionPane.ERROR_MESSAGE);
        }
    }
    public void saveTrans(){
        try{
            String sql="insert into PurchaseTransactions (ptInvoiceID,ptDate,ptDealerName,ptTotal)values(?,?,?,?)";
            pst=conn.prepareStatement(sql);
            pst.setInt(1, Integer.parseInt(txtInvoiceNo.getText()));
            pst.setString(2, dt);
            pst.setString(3, cmbDealer.getSelectedItem().toString());
            pst.setDouble(4, Double.parseDouble(txtTotalInvoice.getText()));
            pst.execute();
            pst.close();
            JOptionPane.showMessageDialog(null, "Purchase transaction saved successfully","Transaction Saved",JOptionPane.INFORMATION_MESSAGE);
        }
        catch(NumberFormatException | SQLException e){
            JOptionPane.showMessageDialog(null, e,"saveTrans() Exception",JOptionPane.ERROR_MESSAGE);
        }
    }
    private void btnSaveTransActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveTransActionPerformed
        // TODO add your handling code here:
        saveInvoice();
        saveTrans();
        readPurTrans();
    }//GEN-LAST:event_btnSaveTransActionPerformed
    //Program to update transaction
    public void updtTrans(){
        try{
            String sql="update PurchaseTransactions set ptInvoiceID=?,ptDate=?,ptDealerName=?,ptTotal=?";
            pst=conn.prepareStatement(sql);
            pst.setInt(1, Integer.parseInt(txtInvoiceNo.getText()));
            pst.setString(2, dt);
            pst.setString(3, cmbDealer.getSelectedItem().toString());
            pst.setDouble(4, Double.parseDouble(txtTotalInvoice.getText()));
            pst.execute();
            pst.close();
            JOptionPane.showMessageDialog(null, "Purchase transaction updated successfully","Transaction Updated",JOptionPane.INFORMATION_MESSAGE);
        }
        catch(NumberFormatException | SQLException e){
            JOptionPane.showMessageDialog(null, e,"updtTrans() Exception",JOptionPane.ERROR_MESSAGE);
        }
    }
    private void btnUpdtTransActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdtTransActionPerformed
        // TODO add your handling code here:
        updtTrans();
        readPurTrans();
    }//GEN-LAST:event_btnUpdtTransActionPerformed
    //Program to fetch data on Item keypress
    public void getItemOnKeyPress(){
        try{
            String sql="Select p_itemName from Products where p_itemName Like ?";
            pst=conn.prepareStatement(sql);
            pst.setString(1, cmbItemName.getSelectedItem().toString());
            rs=pst.executeQuery();
            cmbItemName.removeAllItems();
            while(rs.next()){
                cmbItemName.addItem(rs.getString("p_itemName"));
            }
            pst.close();
        }
        catch(SQLException e ){
            //JOptionPane.showMessageDialog(null, e,"getItemOnKeyPress() Exception",JOptionPane.ERROR_MESSAGE);
        }
    }    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PurchaseInvoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PurchaseInvoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PurchaseInvoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PurchaseInvoice.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PurchaseInvoice().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddProduct;
    private javax.swing.JButton btnDeleteProduct;
    private javax.swing.JButton btnGenerateInvoice;
    private javax.swing.JButton btnNewProduct;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnSaveTrans;
    private javax.swing.JButton btnUpdtTrans;
    private javax.swing.JComboBox<String> cmbDealer;
    private javax.swing.JComboBox<String> cmbItemName;
    private javax.swing.JComboBox<String> cmbPurCGSTRate;
    private javax.swing.JComboBox<String> cmbPurIGSTRate;
    private javax.swing.JComboBox<String> cmbPurSGSTRate;
    private javax.swing.JComboBox<String> cmbSalesCGSTRate;
    private javax.swing.JComboBox<String> cmbSalesIGSTRate;
    private javax.swing.JComboBox<String> cmbSalesSGSTRate;
    private javax.swing.JComboBox<String> cmbUnit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblCurrentDate;
    private javax.swing.JLabel lblTime;
    private javax.swing.JPanel pnlPurchaseDetails;
    private javax.swing.JTable tblPurInvoice;
    private javax.swing.JTextField txtBarcode;
    private javax.swing.JTextField txtHSNCODE;
    private javax.swing.JTextField txtInvoiceNo;
    private javax.swing.JTextField txtProductDescription;
    private javax.swing.JTextField txtProductID;
    private javax.swing.JTextField txtPurCGSTAmt;
    private javax.swing.JTextField txtPurIGSTAmt;
    private javax.swing.JTextField txtPurSGSTAmt;
    private javax.swing.JTextField txtPurTotAmt;
    private javax.swing.JTextField txtPurchaseRate;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtSalesCGSTAmt;
    private javax.swing.JTextField txtSalesIGSTAmt;
    private javax.swing.JTextField txtSalesRate;
    private javax.swing.JTextField txtSalesSGSTAmt;
    private javax.swing.JTextField txtSalesTotAmt;
    private javax.swing.JTextField txtTotalInvoice;
    // End of variables declaration//GEN-END:variables
}
